import CategoryList from "@/components/CategoryList";
import Product from "@/components/Product";
import { buttonVariants } from "@/components/ui/button";
import { cn } from "@/lib/utils";
import {
  getCategories,
  getProducts,
  Product as ProductType,
} from "@/server/getProducts";
import Image from "next/image";
import Link from "next/link";

export default async function HomePage() {
  const products = await getProducts();
  const categories = await getCategories();

  return (
    <div>
      <section className="bg-muted py-12 md:py-20">
        <div className="container px-4 md:px-6">
          <div className="grid gap-6 md:gap-10 md:grid-cols-2 items-center">
            <div className="space-y-6">
              <h1 className="text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl">
                Product filtering with Query Params
              </h1>
              <p className="text-muted-foreground md:text-xl">
                Handling product sorting and filtering using query params
              </p>
              <Link
                href="/products"
                className={cn(
                  buttonVariants({ variant: "default", size: "lg" })
                )}
              >
                Try it out
              </Link>
            </div>
            <div className="hidden md:block">
              <Image
                src="/hero.webp"
                alt="Hero Image"
                title="Generated by CHAT-GPT DALE"
                width={500}
                height={400}
                className="rounded-lg"
              />
            </div>
          </div>
        </div>
      </section>
      <section className="container px-4 md:px-6 py-12 md:py-20">
        <div className="flex items-end justify-between gap-8 mb-16">
          <h2 className="text-2xl font-bold tracking-tighter sm:text-3xl md:text-4xl">
            Check out our products
          </h2>
          <Link
            href="/products"
            className={buttonVariants({ variant: "secondary" })}
          >
            View all products
          </Link>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-8 max-w-7xl items-center">
          {products &&
            products
              .slice(0, 3)
              .map((product: ProductType) => (
                <Product
                  key={product.id}
                  product={product}
                  className="mx-auto"
                />
              ))}
        </div>
        <CategoryList categories={categories} />
      </section>
    </div>
  );
}
